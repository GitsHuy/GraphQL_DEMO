# Định nghĩa các kiểu dữ liệu tương ứng với các bảng trong DB
type Category {
    id: ID!
    name: String
    images: String
    users: [User]
}

type User {
    id: ID!
    fullname: String
    email: String
    phone: String
    products: [Product]
    categories: [Category]
}

type Product {
    id: ID!
    title: String
    quantity: Int
    desc: String
    price: Float
    user: User
}

# Định nghĩa các đầu vào cho Mutation
input UserInput {
    fullname: String!
    email: String!
    password: String!
    phone: String
}

input ProductInput {
    title: String!
    quantity: Int
    desc: String
    price: Float!
    userId: ID!
}

input CategoryInput {
    name: String!
    images: String
}

# Nơi định nghĩa tất cả các truy vấn (lấy dữ liệu)
type Query {
    # Hiển thị tất cả sản phẩm, sắp xếp theo giá (ASC hoặc DESC)
    productsSortedByPrice(sortDirection: String = "ASC"): [Product]

    # Lấy tất cả sản phẩm của 01 category
    productsByCategory(categoryId: ID!): [Product]

    # Các hàm tìm kiếm khác
    findAllUsers: [User]
    findUserById(id: ID!): User
    findAllProducts: [Product]
    findProductById(id: ID!): Product
    findAllCategories: [Category]
    findCategoryById(id: ID!): Category
}

# Nơi định nghĩa tất cả các thay đổi (thêm, sửa, xóa)
type Mutation {
    # User CRUD
    createUser(user: UserInput!): User
    updateUser(id: ID!, user: UserInput!): User
    deleteUser(id: ID!): Boolean

    # Product CRUD
    createProduct(product: ProductInput!): Product
    updateProduct(id: ID!, product: ProductInput!): Product
    deleteProduct(id: ID!): Boolean

    # Category CRUD
    createCategory(category: CategoryInput!): Category
    updateCategory(id: ID!, category: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean

    # Xử lý quan hệ nhiều-nhiều
    addUserToCategory(userId: ID!, categoryId: ID!): Category
}